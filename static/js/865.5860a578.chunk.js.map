{"version":3,"file":"static/js/865.5860a578.chunk.js","mappings":"kJAGA,MAAMA,EAAa,mBAEJ,SAASC,IACtB,MAAOC,EAAaC,IAAkBC,EAAAA,EAAAA,UAAS,CAC7CC,KAAM,GACNC,MAAO,GACPC,MAAO,MAEFC,EAAWC,IAAgBL,EAAAA,EAAAA,UAAS,CACzCC,MAAM,EACNC,OAAO,EACPC,OAAO,IAGHG,EAAoBA,CAACC,EAAOC,EAAWC,KAC3C,MAAMC,EAAQC,OAAOC,iBAAiBC,SAASC,qBAAqB,YAAYL,GAAIK,qBAAqB,UAAU,IAAIC,MACjHC,EAAQT,EAAMU,OAAOD,MAE3BjB,GAAgBmB,IAAe,IAC1BA,EACH,CAACV,GAAYQ,MAGfX,GAAcc,IAAa,IACtBA,EACH,CAACX,GAAYQ,EAAMI,OAAS,GAAKV,IAAUd,KAC1C,EAIL,OACEyB,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,YAAUG,UAAWpB,EAAUH,KAAO,QAAU,GAAGsB,SAAA,EACjDE,EAAAA,EAAAA,KAAA,SACEC,UAAW,EACXC,UAAW,GACXC,KAAK,OACL3B,KAAK,OACLQ,GAAG,OACHoB,YAAY,OACZC,UAAQ,EACRd,MAAOlB,EAAYG,KACnB8B,SAAWC,GAAM1B,EAAkB0B,EAAG,OAAQ,MAEhDP,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,aAEVF,EAAAA,EAAAA,MAAA,YAAUG,UAAWpB,EAAUF,MAAQ,QAAU,GAAGqB,SAAA,EAClDE,EAAAA,EAAAA,KAAA,SACEC,UAAW,EACXC,UAAW,IACXC,KAAK,QACL3B,KAAK,QACLQ,GAAG,QACHoB,YAAY,QACZC,UAAQ,EACRd,MAAOlB,EAAYI,MACnB6B,SAAWC,GAAM1B,EAAkB0B,EAAG,QAAS,MAEjDP,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,WACRE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,sBAERF,EAAAA,EAAAA,MAAA,YAAUG,UAAWpB,EAAUD,MAAQ,QAAU,GAAGoB,SAAA,EAClDE,EAAAA,EAAAA,KAAA,SACEC,UAAW,EACXC,UAAW,GACXM,QAAQ,iBACRL,KAAK,MACL3B,KAAK,QACLQ,GAAG,QACHoB,YAAY,QACZC,UAAQ,EACRd,MAAOlB,EAAYK,MACnB4B,SAAWC,GAAM1B,EAAkB0B,EAAG,QAAS,MAEjDP,EAAAA,EAAAA,KAAA,UAAAF,SAAQ,WACRE,EAAAA,EAAAA,KAAA,QAAAF,SAAM,iCAId,C","sources":["components/form/fieldset/fieldset.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport \"./fieldset.css\";\r\n\r\nconst errorColor = 'rgb(203, 61, 64)';\r\n\r\nexport default function Fieldset() {\r\n  const [inputValues, setInputValues] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n  });\r\n  const [isInvalid, setIsInvalid] = useState({\r\n    name: false,\r\n    email: false,\r\n    phone: false,\r\n  });\r\n\r\n  const handleInputChange = (event, fieldName, id) => {\r\n    const error = window.getComputedStyle(document.getElementsByTagName('fieldset')[id].getElementsByTagName('legend')[0]).color;\r\n    const value = event.target.value;\r\n\r\n    setInputValues((prevInputValues) => ({\r\n      ...prevInputValues,\r\n      [fieldName]: value,\r\n    }));\r\n\r\n    setIsInvalid((prevIsInvalid) => ({\r\n      ...prevIsInvalid,\r\n      [fieldName]: value.length > 0 && error === errorColor,\r\n    }));\r\n\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <fieldset className={isInvalid.name ? 'error' : ''}>\r\n        <input\r\n          minLength={2}\r\n          maxLength={60}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          placeholder='Name'\r\n          required\r\n          value={inputValues.name}\r\n          onChange={(e) => handleInputChange(e, 'name', 0)}\r\n        />\r\n        <legend>Name</legend>\r\n      </fieldset>\r\n      <fieldset className={isInvalid.email ? 'error' : ''}>\r\n        <input\r\n          minLength={2}\r\n          maxLength={100}\r\n          type=\"email\"\r\n          name=\"email\"\r\n          id=\"email\"\r\n          placeholder='Email'\r\n          required\r\n          value={inputValues.email}\r\n          onChange={(e) => handleInputChange(e, 'email', 1)}\r\n        />\r\n        <legend>Email</legend>\r\n        <span>test@test.com</span>\r\n      </fieldset>\r\n      <fieldset className={isInvalid.phone ? 'error' : ''}>\r\n        <input\r\n          minLength={0}\r\n          maxLength={23}\r\n          pattern=\"\\+380[0-9]{9}\"\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          id=\"phone\"\r\n          placeholder='Phone'\r\n          required\r\n          value={inputValues.phone}\r\n          onChange={(e) => handleInputChange(e, 'phone', 2)}\r\n        />\r\n        <legend>Phone</legend>\r\n        <span>+38 (XXX) XXX - XX - XX</span>\r\n      </fieldset>\r\n    </>\r\n  );\r\n}\r\n"],"names":["errorColor","Fieldset","inputValues","setInputValues","useState","name","email","phone","isInvalid","setIsInvalid","handleInputChange","event","fieldName","id","error","window","getComputedStyle","document","getElementsByTagName","color","value","target","prevInputValues","prevIsInvalid","length","_jsxs","_Fragment","children","className","_jsx","minLength","maxLength","type","placeholder","required","onChange","e","pattern"],"sourceRoot":""}